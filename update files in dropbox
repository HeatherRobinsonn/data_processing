#code adapted from https://www.rdocumentation.org/packages/rdrop2/versions/0.5.9 and Wouter van der Bijl

install.packages("rdrop2", dependencies=TRUE)
library(rdrop2)
drop_auth()
#You will need to log in now if you are not already logged in
#Alternatively use the following solution:

.dstate <- new.env(parent = emptyenv())
drop_auth_RT <- function (new_user = FALSE, key = "mmhfsybffdom42w", secret = "l8zeqqqgm1ne5z0", cache = TRUE, rdstoken = NA) 
{
  if (new_user == FALSE & !is.na(rdstoken)) {
    if (file.exists(rdstoken)) {
      .dstate$token <- readRDS(rdstoken)
    }
    else {
      stop("token file not found")
    }
  }
  else {
    if (new_user && file.exists(".httr-oauth")) {
      message("Removing old credentials...")
      file.remove(".httr-oauth")
    }
    dropbox <- httr::oauth_endpoint(authorize = "https://www.dropbox.com/oauth2/authorize?token_access_type=offline",
                                    access = "https://api.dropbox.com/oauth2/token")
    # added "?token_access_type=offline" to the "authorize" parameter so that it can return an access token as well as a refresh token
    dropbox_app <- httr::oauth_app("dropbox", key, secret)
    dropbox_token <- httr::oauth2.0_token(dropbox, dropbox_app, 
                                             cache = cache)
    if (!inherits(dropbox_token, "Token2.0")) {
      stop("something went wrong, try again")
    }
    .dstate$token <- dropbox_token
  }
}

refreshable_token <- drop_auth_RT()
###########################

#in progress: check if destination folder exists and create it if not:
if(!drop_exists('reports')){
drop_create('reports')
}
drop_upload('performance.csv', path = 'reports',dtoken=refreshable_token)

#Read directly from dropbox
new_report <- drop_read_csv("performance.csv")
